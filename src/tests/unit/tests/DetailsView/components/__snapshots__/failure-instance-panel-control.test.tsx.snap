// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FailureInstancePanelControlTest closeFailureInstancePanel: CustomizedActionButton props 1`] = `
{
  "ariaDescription": "Open add a failure instance panel",
  "ariaLabel": "Add a failure instance",
  "children": "Add a failure instance",
  "iconProps": {
    "iconName": "Add",
  },
  "onClick": [Function],
}
`;

exports[`FailureInstancePanelControlTest closeFailureInstancePanel: FlaggedComponent props 1`] = `
{
  "enableJSXElement": <FailureInstancePanelDetails
    onSelectorChange={[Function]}
    onValidateSelector={[Function]}
    path={null}
    snippet={null}
  />,
  "featureFlag": "manualInstanceDetails",
  "featureFlagStoreData": {},
}
`;

exports[`FailureInstancePanelControlTest componentDidUpdate reassigns state: CustomizedActionButton props 1`] = `
{
  "ariaDescription": "Open add a failure instance panel",
  "ariaLabel": "Add a failure instance",
  "children": "Add a failure instance",
  "iconProps": {
    "iconName": "Add",
  },
  "onClick": [Function],
}
`;

exports[`FailureInstancePanelControlTest componentDidUpdate reassigns state: FlaggedComponent props 1`] = `undefined`;

exports[`FailureInstancePanelControlTest onAddFailureInstance: CustomizedActionButton props 1`] = `
{
  "ariaDescription": "Open add a failure instance panel",
  "ariaLabel": "Add a failure instance",
  "children": "Add a failure instance",
  "iconProps": {
    "iconName": "Add",
  },
  "onClick": [Function],
}
`;

exports[`FailureInstancePanelControlTest onAddFailureInstance: FlaggedComponent props 1`] = `undefined`;

exports[`FailureInstancePanelControlTest onFailureDescriptionChange: CustomizedActionButton props 1`] = `
{
  "ariaDescription": "Open add a failure instance panel",
  "ariaLabel": "Add a failure instance",
  "children": "Add a failure instance",
  "iconProps": {
    "iconName": "Add",
  },
  "onClick": [Function],
}
`;

exports[`FailureInstancePanelControlTest onFailureDescriptionChange: FlaggedComponent props 1`] = `undefined`;

exports[`FailureInstancePanelControlTest onSaveEditedFailureInstance: CustomizedActionButton props 1`] = `undefined`;

exports[`FailureInstancePanelControlTest onSaveEditedFailureInstance: FlaggedComponent props 1`] = `undefined`;

exports[`FailureInstancePanelControlTest onSelectorChange : CustomizedActionButton props 1`] = `
{
  "ariaDescription": "Open add a failure instance panel",
  "ariaLabel": "Add a failure instance",
  "children": "Add a failure instance",
  "iconProps": {
    "iconName": "Add",
  },
  "onClick": [Function],
}
`;

exports[`FailureInstancePanelControlTest onSelectorChange : FlaggedComponent props 1`] = `undefined`;

exports[`FailureInstancePanelControlTest onValidateSelector : CustomizedActionButton props 1`] = `
{
  "ariaDescription": "Open add a failure instance panel",
  "ariaLabel": "Add a failure instance",
  "children": "Add a failure instance",
  "iconProps": {
    "iconName": "Add",
  },
  "onClick": [Function],
}
`;

exports[`FailureInstancePanelControlTest onValidateSelector : FlaggedComponent props 1`] = `undefined`;

exports[`FailureInstancePanelControlTest openFailureInstancePanel: CustomizedActionButton props 1`] = `
{
  "ariaDescription": "Open add a failure instance panel",
  "ariaLabel": "Add a failure instance",
  "children": "Add a failure instance",
  "iconProps": {
    "iconName": "Add",
  },
  "onClick": [Function],
}
`;

exports[`FailureInstancePanelControlTest openFailureInstancePanel: FlaggedComponent props 1`] = `undefined`;

exports[`FailureInstancePanelControlTest render FailureInstancePanelControl: create without instance 1`] = `
<DocumentFragment>
  <mock-customizedactionbutton
    ariadescription="Open add a failure instance panel"
    arialabel="Add a failure instance"
    iconprops="[object Object]"
  >
    Add a failure instance
  </mock-customizedactionbutton>
  <mock-genericpanel
    classname="failureInstancePanel"
    closebuttonarialabel="Close failure instance panel"
    hasclosebutton="true"
    headertext="Add a failure instance"
    isopen="false"
  >
    <mock-flaggedcomponent
      enablejsxelement="[object Object]"
      featureflag="manualInstanceDetails"
      featureflagstoredata="[object Object]"
    />
    <mock-styledtextfieldbase
      classname="observedFailureTextfield"
      label="Comment"
      multiline="true"
      placeholder="Comment"
      resizable="false"
      rows="8"
      value=""
    />
    <div>
      <mock-actionandcancelbuttonscomponent
        ishidden="false"
        primarybuttondisabled="true"
        primarybuttontext="Add failed instance"
      />
    </div>
  </mock-genericpanel>
</DocumentFragment>
`;

exports[`FailureInstancePanelControlTest render FailureInstancePanelControl: create without instance: CustomizedActionButton props 1`] = `
{
  "ariaDescription": "Open add a failure instance panel",
  "ariaLabel": "Add a failure instance",
  "children": "Add a failure instance",
  "iconProps": {
    "iconName": "Add",
  },
  "onClick": [Function],
}
`;

exports[`FailureInstancePanelControlTest render FailureInstancePanelControl: create without instance: FlaggedComponent props 1`] = `
{
  "enableJSXElement": <FailureInstancePanelDetails
    onSelectorChange={[Function]}
    onValidateSelector={[Function]}
    path={null}
    snippet={null}
  />,
  "featureFlag": "manualInstanceDetails",
  "featureFlagStoreData": {},
}
`;

exports[`FailureInstancePanelControlTest render FailureInstancePanelControl: edit without instance 1`] = `
<DocumentFragment>
  <button
    class="fui-Link editButton ___52mpgl0_k1g75g0 f2hkw1w f3rmtva f1ewtqcl fyind8e f1k6fduh f1w7gpdv fk6fouc fkhj508 figsok6 f1s184ao f1mk8lai fnbmjn9 f1o700av f1iuv45f f1cmlufx f9n3di6 f1ids18y f1tx3yz7 f1deo86v f1eh06m1 f1iescvh fhgqx19 f1olyrje f1p93eir f1nev41a f1ern45e f1n71otn f1h8hb77 f1deefiw"
    type="button"
  />
  <mock-genericpanel
    classname="failureInstancePanel"
    closebuttonarialabel="Close failure instance panel"
    hasclosebutton="true"
    headertext="Edit failure instance"
    isopen="false"
  >
    <mock-flaggedcomponent
      enablejsxelement="[object Object]"
      featureflag="manualInstanceDetails"
      featureflagstoredata="[object Object]"
    />
    <mock-styledtextfieldbase
      classname="observedFailureTextfield"
      label="Comment"
      multiline="true"
      placeholder="Comment"
      resizable="false"
      rows="8"
      value=""
    />
    <div>
      <mock-actionandcancelbuttonscomponent
        ishidden="false"
        primarybuttondisabled="true"
        primarybuttontext="Save"
      />
    </div>
  </mock-genericpanel>
</DocumentFragment>
`;

exports[`FailureInstancePanelControlTest render FailureInstancePanelControl: edit without instance: CustomizedActionButton props 1`] = `undefined`;

exports[`FailureInstancePanelControlTest render FailureInstancePanelControl: edit without instance: FlaggedComponent props 1`] = `
{
  "enableJSXElement": <FailureInstancePanelDetails
    onSelectorChange={[Function]}
    onValidateSelector={[Function]}
    path={null}
    snippet={null}
  />,
  "featureFlag": "manualInstanceDetails",
  "featureFlagStoreData": {},
}
`;

exports[`FailureInstancePanelControlTest render FailureInstancePanelControl: partial original instance 1`] = `
<DocumentFragment>
  <mock-customizedactionbutton
    ariadescription="Open add a failure instance panel"
    arialabel="Add a failure instance"
    iconprops="[object Object]"
  >
    Add a failure instance
  </mock-customizedactionbutton>
  <mock-genericpanel
    classname="failureInstancePanel"
    closebuttonarialabel="Close failure instance panel"
    hasclosebutton="true"
    headertext="Add a failure instance"
    isopen="false"
  >
    <mock-flaggedcomponent
      enablejsxelement="[object Object]"
      featureflag="manualInstanceDetails"
    />
    <mock-styledtextfieldbase
      classname="observedFailureTextfield"
      label="Comment"
      multiline="true"
      placeholder="Comment"
      resizable="false"
      rows="8"
      value="original text"
    />
    <div>
      <mock-actionandcancelbuttonscomponent
        ishidden="false"
        primarybuttondisabled="false"
        primarybuttontext="Add failed instance"
      />
    </div>
  </mock-genericpanel>
</DocumentFragment>
`;

exports[`FailureInstancePanelControlTest render FailureInstancePanelControl: partial original instance: CustomizedActionButton props 1`] = `
{
  "ariaDescription": "Open add a failure instance panel",
  "ariaLabel": "Add a failure instance",
  "children": "Add a failure instance",
  "iconProps": {
    "iconName": "Add",
  },
  "onClick": [Function],
}
`;

exports[`FailureInstancePanelControlTest render FailureInstancePanelControl: partial original instance: FlaggedComponent props 1`] = `
{
  "enableJSXElement": <FailureInstancePanelDetails
    onSelectorChange={[Function]}
    onValidateSelector={[Function]}
  />,
  "featureFlag": "manualInstanceDetails",
  "featureFlagStoreData": null,
}
`;
