// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExportDialog renders with CodePen export form 1`] = `
<DocumentFragment>
  <mock-codepenexportform
    description="description"
    htmlexportdata="fake html"
    htmlfilename="THE REPORT FILE NAME"
    jsonexportdata="fake json"
    jsonfilename="JSON file name"
  />
</DocumentFragment>
`;

exports[`ExportDialog renders with export dropdown 1`] = `
<DocumentFragment>
  <mock-dialog
    dialogcontentprops="[object Object]"
    hidden="false"
    modalprops="[object Object]"
  >
    <mock-styledtextfieldbase
      arialabel="Provide result description"
      multiline="true"
      resizable="false"
      rows="8"
      value="description"
    />
    <mock-styleddialogfooterbase>
      <mock-exportdropdown
        featureflagstoredata="[object Object]"
        htmlfilename="THE REPORT FILE NAME"
        htmlfileurl="html file url"
        jsonfilename="JSON file name"
        jsonfileurl="json file url"
        reportexportservices="[object Object],[object Object]"
      />
    </mock-styleddialogfooterbase>
  </mock-dialog>
</DocumentFragment>
`;

exports[`ExportDialog renders with open false 1`] = `
<DocumentFragment>
  <mock-dialog
    dialogcontentprops="[object Object]"
    hidden="true"
    modalprops="[object Object]"
  >
    <mock-styledtextfieldbase
      arialabel="Provide result description"
      multiline="true"
      resizable="false"
      rows="8"
      value="description"
    />
    <mock-styleddialogfooterbase>
      <button
        class="fui-Button r1alrhcs ___1akj6hk_ih97uj0 ffp7eso f1p3nwhy f11589ue f1q5o8ev f1pdflbu f1phragk f15wkkf3 f1s2uweq fr80ssc f1ukrpxl fecsdlb f1rq72xc fnp9lpt f1h0usnq fs4ktlq f16h9ulv fx2bmrt f1d6v5y2 f1rirnrt f1uu00uk fkvaka8 f1ux7til f9a0qzu f1lkg8j3 fkc42ay fq7113v ff1wgvm fiob0tu f1j6scgf f1x4h75k f4xjyn1 fbgcvur f1ks1yx8 f1o6qegi fcnxywj fmxjhhp f9ddjv3 f17t0x8g f194v5ow f1qgg65p fk7jm04 fhgccpy f32wu9k fu5nqqq f13prjl2 f1czftr5 f1nl83rv f12k37oa fr96u23"
        data-automation-id="single-export-to-html-button"
        type="button"
      >
        Export
      </button>
    </mock-styleddialogfooterbase>
  </mock-dialog>
</DocumentFragment>
`;

exports[`ExportDialog renders with open false: Dialog props 1`] = `
{
  "children": [
    <StyledTextFieldBase
      ariaLabel="Provide result description"
      autoFocus={true}
      multiline={true}
      onChange={[Function]}
      resizable={false}
      rows={8}
      value="description"
    />,
    <StyledDialogFooterBase>
      <Button
        appearance="primary"
        data-automation-id="single-export-to-html-button"
        download="THE REPORT FILE NAME"
        href="html file url"
        onClick={[Function]}
      >
        Export
      </Button>
    </StyledDialogFooterBase>,
  ],
  "dialogContentProps": {
    "subText": "Optional: please describe the result (it will be saved in the report).",
    "title": "Provide result description",
    "type": 0,
  },
  "hidden": true,
  "modalProps": {
    "containerClassName": "exportDialog",
    "isBlocking": false,
    "onDismissed": [Function],
  },
  "onDismiss": [Function],
}
`;

exports[`ExportDialog renders with open true 1`] = `
<DocumentFragment>
  <mock-dialog
    dialogcontentprops="[object Object]"
    hidden="false"
    modalprops="[object Object]"
  >
    <mock-styledtextfieldbase
      arialabel="Provide result description"
      multiline="true"
      resizable="false"
      rows="8"
      value="description"
    />
    <mock-styleddialogfooterbase>
      <button
        class="fui-Button r1alrhcs ___1akj6hk_ih97uj0 ffp7eso f1p3nwhy f11589ue f1q5o8ev f1pdflbu f1phragk f15wkkf3 f1s2uweq fr80ssc f1ukrpxl fecsdlb f1rq72xc fnp9lpt f1h0usnq fs4ktlq f16h9ulv fx2bmrt f1d6v5y2 f1rirnrt f1uu00uk fkvaka8 f1ux7til f9a0qzu f1lkg8j3 fkc42ay fq7113v ff1wgvm fiob0tu f1j6scgf f1x4h75k f4xjyn1 fbgcvur f1ks1yx8 f1o6qegi fcnxywj fmxjhhp f9ddjv3 f17t0x8g f194v5ow f1qgg65p fk7jm04 fhgccpy f32wu9k fu5nqqq f13prjl2 f1czftr5 f1nl83rv f12k37oa fr96u23"
        data-automation-id="single-export-to-html-button"
        type="button"
      >
        Export
      </button>
    </mock-styleddialogfooterbase>
  </mock-dialog>
</DocumentFragment>
`;

exports[`ExportDialog renders with open true: Dialog props 1`] = `
{
  "children": [
    <StyledTextFieldBase
      ariaLabel="Provide result description"
      autoFocus={true}
      multiline={true}
      onChange={[Function]}
      resizable={false}
      rows={8}
      value="description"
    />,
    <StyledDialogFooterBase>
      <Button
        appearance="primary"
        data-automation-id="single-export-to-html-button"
        download="THE REPORT FILE NAME"
        href="html file url"
        onClick={[Function]}
      >
        Export
      </Button>
    </StyledDialogFooterBase>,
  ],
  "dialogContentProps": {
    "subText": "Optional: please describe the result (it will be saved in the report).",
    "title": "Provide result description",
    "type": 0,
  },
  "hidden": false,
  "modalProps": {
    "containerClassName": "exportDialog",
    "isBlocking": false,
    "onDismissed": [Function],
  },
  "onDismiss": [Function],
}
`;

exports[`ExportDialog renders without export dropdown due to lack of service 1`] = `
<DocumentFragment>
  <mock-dialog
    dialogcontentprops="[object Object]"
    hidden="false"
    modalprops="[object Object]"
  >
    <mock-styledtextfieldbase
      arialabel="Provide result description"
      multiline="true"
      resizable="false"
      rows="8"
      value="description"
    />
    <mock-styleddialogfooterbase>
      <button
        class="fui-Button r1alrhcs ___1akj6hk_ih97uj0 ffp7eso f1p3nwhy f11589ue f1q5o8ev f1pdflbu f1phragk f15wkkf3 f1s2uweq fr80ssc f1ukrpxl fecsdlb f1rq72xc fnp9lpt f1h0usnq fs4ktlq f16h9ulv fx2bmrt f1d6v5y2 f1rirnrt f1uu00uk fkvaka8 f1ux7til f9a0qzu f1lkg8j3 fkc42ay fq7113v ff1wgvm fiob0tu f1j6scgf f1x4h75k f4xjyn1 fbgcvur f1ks1yx8 f1o6qegi fcnxywj fmxjhhp f9ddjv3 f17t0x8g f194v5ow f1qgg65p fk7jm04 fhgccpy f32wu9k fu5nqqq f13prjl2 f1czftr5 f1nl83rv f12k37oa fr96u23"
        data-automation-id="single-export-to-html-button"
        type="button"
      >
        Export
      </button>
    </mock-styleddialogfooterbase>
  </mock-dialog>
</DocumentFragment>
`;
